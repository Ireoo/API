name: Release

on:
  push:
    branch: master

jobs:
  release:
    runs-on: macOS-latest

    # strategy:
    #   matrix:
    #     node: [12, 13]
    #     os: [macOS-latest, ubuntu-latest, windows-latest]

    steps:
      - name: install
        uses: actions/checkout@master
        with:
          node-version: "latest"

      - name: build
        run: |
          npm i
          npm run build

      - name: upload
        uses: actions/upload-artifact@master
        with:
          name: API
          path: ./build/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: API-${{ github.sha }}
          release_name: API Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release windows
        id: upload_release_windows
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/api-win.exe
          asset_name: api-win.exe
          asset_content_type: application/x-executable

      - name: Upload Release macos
        id: upload_release_macos
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/api-macos
          asset_name: api-macos
          asset_content_type: application/x-executable

      - name: Upload Release linux
        id: upload_release_linux
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/api-linux
          asset_name: api-linux
          asset_content_type: application/x-executable
